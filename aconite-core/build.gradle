buildscript {
    ext.kotlin_version = '1.1.4-2'
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.github.jengelman.gradle.plugins:shadow:2.0.1"
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'kotlin'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

def getVersionName = {
    def stdout = new ByteArrayOutputStream()
    def versionRegex = ~/^v/
    exec {
        commandLine 'git', 'describe', '--tags'
        standardOutput = stdout
    }
    return stdout.toString().trim() - versionRegex
}

group = 'io.aconite'
version = getVersionName()

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

repositories {
    mavenCentral()
    jcenter()
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

sourceSets {
    main {
        java {
            srcDirs = ['src']
        }
        resources {
            srcDirs = ['res']
        }
    }

    test {
        java {
            srcDirs = ['tests']
        }
        resources {
            srcDirs = ['res', 'res-test']
        }
    }
}

test {
    testLogging.showStandardStreams = true
}

shadowJar {
    classifier = null
    version = null
}

kotlin {
    experimental {
        coroutines "enable"
    }
}

sourceCompatibility = 1.8

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
    compile group: 'com.google.code.gson', name: 'gson', version: '1.7.2'
    compile group: 'com.squareup.moshi', name: 'moshi', version: '1.5.0'
    compile group: 'com.squareup.moshi', name: 'moshi-kotlin', version: '1.5.0'
    compile group: 'org.jetbrains.kotlin', name: 'kotlin-reflect', version: '1.1.2-2'
    compile group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-core', version: '0.16'
    compile group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-jdk8', version: '0.16'
    testCompile 'junit:junit:4.12'
}

jar {
    baseName = project.getProperty('name')
    manifest {
        attributes 'Implementation-Title': 'Aconite Core'
        attributes 'Implementation-Version': version
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    publications = ['mavenJava']
    configurations = ['archives']
    pkg {
        repo = 'aconite'
        name = 'aconite-core'
        vcsUrl = 'https://github.com/AcapellaSoft/Aconite.git'
        licenses = ['MIT']
        version {
            name = project.version
            desc = 'Aconite Core'
            released  = new Date()
            vcsTag = "v$project.version"
        }
    }
}

task sourcesJar(type: Jar) {
    from sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
    classifier = 'javadoc'
}

artifacts {
    archives javadocJar
    archives sourcesJar
}